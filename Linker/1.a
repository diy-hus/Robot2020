;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 05/12/2014
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega128L
;Program type            : Application
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*****************************************************/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;
;#include <delay.h>
;
;#include <alcd.h>
;
;#define chanel 8
;#include "khai_bao.c"
; unsigned int adc[8];
;  unsigned char status[chanel] = {1,2,4,8,16,32,64,128};

	.DSEG
;  unsigned char outStatus;
;
;  float error, old_error, error_sum, Kp=2, Kd=12, Ki=0;
;  int  Udk_1;
;  int k[2]={250,250};
;  eeprom unsigned int level[chanel] = {300,700,700,700,700,700,700,600};
;  int dem,max_e, Mid=700;
;  int  speed=800;
;  unsigned char tt=0,g=0,RC,RC1,RC2,RC3,RC4,RC5,ttv=0,v=0;
;unsigned int max_adc[8];
;unsigned int min_adc[8];
;  unsigned char i=0;
;#include "dinh_nghia.c"
;
;#define tiemcan_1 PIND.6
;#define tiemcan_2 PIND.7
;#define tiemcan_3 PINC.0
;#define tiemcan_4 PINC.1
;#define tiemcan_5 PINC.2
;// Ð?nh nghia các servo
;#define servo_1  PORTC.3
;#define servo_2  PORTC.4
;#define servo_3  PORTC.5
;#define servo_4  PORTC.6
;#define servo_5  PORTC.7
;
;
;// Ð?nh nghia các nút ch?n chuong trình
;#define doc_adc      PIND.3
;#define CT4          PIND.4
;//#define CT2          PIND.5
;//#define CT3          PIND.2
;
;#include "khoi_tao.c"
;#define ADC_VREF_TYPE 0x00
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0022 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;// Delay needed for the stabilization of the ADC input voltage
;delay_us(10);
;PCODE: $00000013 VOL: 0
;// Start the AD conversion
;ADCSRA|=0x40;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;// Wait for the AD conversion to complete
;while ((ADCSRA & 0x10)==0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;ADCSRA|=0x10;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;return 1023-ADCW;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;}
;PCODE: $00000024 VOL: 0
;// Timer 0 output compare interrupt service routine
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
;{
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; //Place your code here
;dem++;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;if (dem==200){dem=0;}
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;if (RC1>dem){servo_1=1;}else{servo_1=0;}
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;if (RC2>dem){servo_2=1;}else{servo_2=0;}
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;if (RC3>dem){servo_3=1;}else{servo_3=0;}
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;if (RC4>dem){servo_4=1;}else{servo_4=0;}
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;if (RC5>dem){servo_5=1;}else{servo_5=0;}
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;
;
;}
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;#include "doc_adc.c"
;//dat sensor vao vach trang nhan CT1
;//dat sensor vao vach den nhan CT1
;//cho luu gia tri nguong vao eeprom
;
;
; void read_adc_all()
; 0000 0023   {
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;    unsigned char i;
;    unsigned int temp;
;    outStatus = 0;
;PCODE: $00000070 VOL: 0
;	i -> R17
;	temp -> R18,R19
;PCODE: $00000071 VOL: 0
;    for (i=0; i<chanel; i++)
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;    {
;        temp = read_adc(i);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;        if (temp<level[i])
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;        {
;            adc[i]=0;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;        }
;        else
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;        {
;            adc[i]=temp;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;            outStatus |= status[i];
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;        }
;PCODE: $0000009B VOL: 0
;        delay_us(50);
;PCODE: $0000009C VOL: 0
;    }
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;
;  }
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;void setnguong(void)
;{   unsigned char j=0,lcd_buffer[16];
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;
;  sprintf(lcd_buffer,"%d %d %d %d",read_adc(0),read_adc(1),read_adc(2),read_adc(3));
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;	j -> R17
;	lcd_buffer -> Y+1
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;  lcd_gotoxy(0,0);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;  lcd_puts(lcd_buffer);
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;  sprintf(lcd_buffer,"%d %d %d %d",read_adc(4),read_adc(5),read_adc(6),read_adc(7));
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;  lcd_gotoxy(0,1);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;  lcd_puts(lcd_buffer);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;    if((PIND.3==0)&&(i==0))
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;        {
;        while(!PIND.3)
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;            lcd_clear();
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;            lcd_putsf("doc vach trang");
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;            delay_ms(20);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;            {   for(j=1;j<7;j++)
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;                {
;                    max_adc[j]=read_adc(j);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;                }
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;            }
;        i=1;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;        }
;         //hien thi gia tri len lcd
;        sprintf(lcd_buffer,"%d %d %d %d", max_adc[0], max_adc[1], max_adc[2], max_adc[3]);
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;        lcd_gotoxy(0,0);
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;        lcd_puts(lcd_buffer);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;        sprintf(lcd_buffer,"%d %d %d %d", max_adc[4], max_adc[5], max_adc[6], max_adc[7]);
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;        lcd_gotoxy(0,1);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;        lcd_puts(lcd_buffer);
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;            if((PIND.3==0)&&(i==1))
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;
;        {
;        while(!PIND.3)
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;            {
;            lcd_clear();
;PCODE: $0000016B VOL: 0
;            lcd_gotoxy(0,0);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;            lcd_putsf("doc vach den");
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;            delay_ms(20);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;             for(j=1;j<7;j++)
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;                {
;                    min_adc[j]=read_adc(j);
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;                }
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;            }
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;        i=2;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;        //hien thi gia tri len lcd
;        sprintf(lcd_buffer,"%d %d %d %d", min_adc[0], min_adc[1], min_adc[2], min_adc[3]);
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;        lcd_gotoxy(0,0);
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;        lcd_puts(lcd_buffer);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;        sprintf(lcd_buffer,"%d %d %d %d", min_adc[4], min_adc[5], min_adc[6], min_adc[7]);
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;        lcd_gotoxy(0,1);
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;
;            lcd_clear();
;PCODE: $000001CD VOL: 0
;            lcd_gotoxy(0,0);
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;            lcd_putsf("tinh nguong");
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;            delay_ms(200);
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;
;        for(j=1;j<7;j++)
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;            {
;            level[j]=(max_adc[j]+min_adc[j])/2;
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;            delay_ms(200);
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;            sprintf(lcd_buffer,"%d %d %d %d",level[1],level[2],level[3],level[4]);
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;            lcd_gotoxy(0,0);
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;            lcd_puts(lcd_buffer);
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;            sprintf(lcd_buffer,"%d %d ",level[5],level[6]);
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;            lcd_gotoxy(0,1);
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;            lcd_puts(lcd_buffer);
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;            delay_ms(20);
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;            }
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;        lcd_clear();
;PCODE: $00000240 VOL: 0
;        lcd_gotoxy(0,0);
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;        lcd_putsf("da luu san");
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;        delay_ms(20);
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;        }
;
;}
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;#include "PID.c"
; /////////////////////// TINH VI TRI XE/////////////////////////////////////
;int vitrixe()
; 0000 0024  {
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;
;
;    char j;
;    unsigned int sum1=0, sum2=0;
;    float temp;
;    read_adc_all();
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;	j -> R17
;	sum1 -> R18,R19
;	sum2 -> R20,R21
;	temp -> Y+6
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;    for (j=1; j<7;j++)
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;    {
;        sum1=sum1+adc[j]*(j+1);
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;        sum2=sum2+adc[j];
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;    }
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;    if (sum2!=0)
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;    {
;        temp = (float)sum1*10;
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;        temp = temp/sum2;
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;    }
;    else
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;        temp=0;
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;    return temp-45;
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; }
;PCODE: $00000295 VOL: 0
;
;//---------------------------------------------------
;int PID_control()
; {
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;    float delta, Udk;
;    int error_sum=0,Max = 42;
;
;    error =(float)vitrixe();            // Sai so dieu khien
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;	delta -> Y+8
;	Udk -> Y+4
;	error_sum -> R16,R17
;	Max -> R18,R19
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;
;
;    if ((error<-35) && (old_error>=0)) {error=-error;}
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;
;    delta = (error - old_error);
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;    old_error = error;                  //Luu gia tri sai so
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;    error_sum = error_sum+error; // Thanh phan tich phan
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;
;    // Khong cho thanh phan tich phan vuot qua gia tri max
;    if (error_sum <-max_e) error_sum = -max_e;
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;    if (error_sum > max_e) error_sum = max_e;
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;
;    Udk = Kp*error + Ki*error_sum + Kd*delta;  //Tin hieu dieu khien
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;
;    // Giam sat gia tri dieu khien ko duoc vuot qua ngwong
;    if (Udk <-Max) Udk = -Max;
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;    if (Udk > Max) Udk = Max;
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;
;    return (int)Udk;
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; }
;PCODE: $000002F4 VOL: 0
;
;#include "dk_motor.c"
;// Chuong trinh dieu khien Motor
;#define motor_1 0
;#define motor_2 1
;#define motor_3 2
;#define motor_4 3
;
;#define run_thuan 1
;#define run_nguoc 0
;
;void control_motor_(unsigned char motor,unsigned char dir_motor, unsigned char speed);
;
;void control_motor_(unsigned char motor,unsigned char dir_motor, unsigned char speed)
; 0000 0025 {
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;    switch(motor)
;PCODE: $000002F7 VOL: 0
;	motor -> Y+2
;	dir_motor -> Y+1
;	speed -> Y+0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;    {
;        case 0:
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;        {
;            PORTB.2 = dir_motor;
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;            //if(speed>100)   speed = 100;
;
;          OCR1A=speed-Udk_1*(Udk_1/2);
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;            break;
;PCODE: $00000312 VOL: 0
;        }
;        case 1:
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;        {
;            PORTB.3 = dir_motor;
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;            //if(speed>100)   speed = 100;
;
;            OCR1B=speed+Udk_1*(-Udk_1/2);  ;
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;            break;
;PCODE: $0000032C VOL: 0
;        }
;        case 2:
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;        {
;            PORTE.1 = dir_motor;
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;            //if(speed>100)   speed = 100;
;            if(dir_motor == 1)  {OCR3AH = (int)(speed+Udk_1*(-Udk_1/2.1))/256;OCR3AL = (int)(speed+Udk_1*(-Udk_1/2.1))%2 ...
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;            else {OCR3AH = 1023-(int)(speed+Udk_1*(-Udk_1/2.1))/256;OCR3AL = 1023-(int)(speed+Udk_1*(-Udk_1/2.1))%256;}  ...
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;            break;
;PCODE: $00000394 VOL: 0
;        }
;        case 3:
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;        {
;            PORTE.2 = dir_motor;
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;            //if(speed>100)   speed = 100;
;            if(dir_motor == 1)  {OCR3BH = (int)(speed-Udk_1*(-Udk_1/2.1))/256;OCR3BL = (int)(speed-Udk_1*(-Udk_1/2.1))%2 ...
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;            else {OCR3BH = 1023-(int)(speed-Udk_1*(-Udk_1/2.1))/256;OCR3BL = 1023-(int)(speed-Udk_1*(-Udk_1/2.1))%256;}  ...
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;            break;
;PCODE: $00000400 VOL: 0
;        }
;
;    }
;PCODE: $00000401 VOL: 0
;}
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;#include "banhlai_hus.c"
;
;
;void banhlai(void)
; 0000 0026 {
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;      OCR1A=800;
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;      OCR1B=800;
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;      //lai banh truoc
;      Udk_1 = PID_control();
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;      RC=151;
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;      //lai banh sau
;      if (Udk_1<0)
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;             {
;             PORTB.2 = 0;
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;             OCR1A=speed-Udk_1*(Udk_1/0.8);
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;             RC=(int)(148+Udk_1/1.2);
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;      OCR3CH=RC*10/256;
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;      OCR3CL=RC*10%256;
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;             }
;      if (Udk_1>0)
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;            {
;           PORTB.3 = 0;
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;            OCR1B=speed+Udk_1*(-Udk_1/1.2);
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;            RC=(int)(148+Udk_1/1.2);
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;      OCR3CH=RC*10/256;
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;      OCR3CL=RC*10%256;
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;            }
;}
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;#include "ham_main.c"
;void main(void)
; 0000 0027 {
;PCODE: $00000461 VOL: 0
; unsigned char lcd_buffer[16];
;// Declare your local variables here
;
;// Input/Output Ports initialization
;// Port A initialization
;// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
;// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
;PORTA=0x00;
;PCODE: $00000462 VOL: 0
;	lcd_buffer -> Y+0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;DDRA=0x00;
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;
;// Port B initialization
;// Func7=In Func6=Out Func5=Out Func4=In Func3=In Func2=In Func1=In Func0=In
;// State7=T State6=0 State5=0 State4=T State3=T State2=T State1=T State0=T
;PORTB=0x00;
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;DDRB=0x60;
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;
;// Port C initialization
;// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
;// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
;PORTC=0x00;
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;DDRC=0x00;
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;
;// Port D initialization
;// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
;// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
;PORTD=0xFF;
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;DDRD=0x00;
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;
;// Port E initialization
;// Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
;// State7=0 State6=0 State5=0 State4=0 State3=0 State2=T State1=T State0=T
;PORTE=0x00;
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;DDRE=0xF8;
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;
;// Port F initialization
;// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
;// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
;PORTF=0x00;
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;DDRF=0x00;
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;
;// Port G initialization
;// Func4=In Func3=In Func2=In Func1=In Func0=In
;// State4=T State3=T State2=T State1=T State0=T
;PORTG=0x00;
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;DDRG=0x00;
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;
;// Timer/Counter 0 initialization
;// Clock source: System Clock
;// Clock value: 1000,000 kHz
;// Mode: CTC top=OCR0
;// OC0 output: Disconnected
;ASSR=0x00;
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;TCCR0=0x0A;
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;TCNT0=0x00;
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;OCR0=0x63;
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;
;// Timer/Counter 1 initialization
;// Clock source: System Clock
;// Clock value: 125,000 kHz
;// Mode: Fast PWM top=0x03FF
;// OC1A output: Non-Inv.
;// OC1B output: Non-Inv.
;// OC1C output: Discon.
;// Noise Canceler: Off
;// Input Capture on Falling Edge
;// Timer1 Overflow Interrupt: Off
;// Input Capture Interrupt: Off
;// Compare A Match Interrupt: Off
;// Compare B Match Interrupt: Off
;// Compare C Match Interrupt: Off
;TCCR1A=0xA3;
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;TCCR1B=0x0B;
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;TCNT1H=0x00;
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;TCNT1L=0x00;
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;ICR1H=0x00;
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;ICR1L=0x00;
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;OCR1AH=0x00;
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;OCR1AL=0x00;
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;OCR1BH=0x00;
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;OCR1BL=0x00;
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;OCR1CH=0x00;
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;OCR1CL=0x00;
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;
;// Timer/Counter 2 initialization
;// Clock source: System Clock
;// Clock value: Timer2 Stopped
;// Mode: Normal top=0xFF
;// OC2 output: Disconnected
;TCCR2=0x00;
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;TCNT2=0x00;
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;OCR2=0x00;
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;
;// Timer/Counter 3 initialization
;// Clock source: System Clock
;// Clock value: 1000,000 kHz
;// Mode: Fast PWM top=ICR3
;// OC3A output: Non-Inv.
;// OC3B output: Non-Inv.
;// OC3C output: Non-Inv.
;// Noise Canceler: Off
;// Input Capture on Falling Edge
;// Timer3 Overflow Interrupt: Off
;// Input Capture Interrupt: Off
;// Compare A Match Interrupt: Off
;// Compare B Match Interrupt: Off
;// Compare C Match Interrupt: Off
;TCCR3A=0xAA;
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;TCCR3B=0x1A;
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;TCNT3H=0x00;
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;TCNT3L=0x00;
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;ICR3H=20000/256;
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;ICR3L=20000/256;
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;OCR3CH=1480/256;
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;OCR3CL=1480%256;
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;OCR3BH=2000/256;
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;OCR3BL=2000%256;
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;OCR3AH=2000/256;;
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;OCR3AL=2000%256;
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;// External Interrupt(s) initialization
;// INT0: Off
;// INT1: Off
;// INT2: Off
;// INT3: Off
;// INT4: Off
;// INT5: Off
;// INT6: Off
;// INT7: Off
;EICRA=0x00;
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;EICRB=0x00;
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;EIMSK=0x00;
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;
;// Timer(s)/Counter(s) Interrupt(s) initialization
;TIMSK=0x02;
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;
;ETIMSK=0x00;
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;
;// USART0 initialization
;// USART0 disabled
;UCSR0B=0x00;
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;
;// USART1 initialization
;// USART1 disabled
;UCSR1B=0x00;
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;
;// Analog Comparator initialization
;// Analog Comparator: Off
;// Analog Comparator Input Capture by Timer/Counter 1: Off
;ACSR=0x80;
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;SFIOR=0x00;
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;
;// ADC initialization
;// ADC Clock frequency: 1000,000 kHz
;// ADC Voltage Reference: AREF pin
;ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;ADCSRA=0x83;
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;
;// SPI initialization
;// SPI disabled
;SPCR=0x00;
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;
;// TWI initialization
;// TWI disabled
;TWCR=0x00;
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;
;// Alphanumeric LCD initialization
;// Connections specified in the
;// Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
;// RS - PORTA Bit 0
;// RD - PORTA Bit 1
;// EN - PORTA Bit 2
;// D4 - PORTA Bit 4
;// D5 - PORTA Bit 5
;// D6 - PORTA Bit 6
;// D7 - PORTA Bit 7
;// Characters/line: 16
;lcd_init(16);
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;
;TWCR=0x00;
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;
;max_e=Mid/5;
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;
; #asm("sei")
;PCODE: $000004DF VOL: 0
	sei
;PCODE: $000004E0 VOL: 0
; //level[0]=k[0];
; //level[7]=k[1];
; 0000 0028 while (1)
;PCODE: $000004E1 VOL: 0
; 0000 0029       {
; 0000 002A       setnguong();
;PCODE: $000004E2 VOL: 0
; 0000 002B       if(PIND.5==0)
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
; 0000 002C       while(1)
;PCODE: $000004E6 VOL: 0
; 0000 002D       {
; 0000 002E       banhlai();
;PCODE: $000004E7 VOL: 0
; 0000 002F       // dieu khien servo
; 0000 0030       RC1=200;
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
; 0000 0031       RC2=300;
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
; 0000 0032 
; 0000 0033       //hien thi len lcd
; 0000 0034       sprintf(lcd_buffer,"Vitrixe=%d %d",Udk_1,v);
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
; 0000 0035         lcd_gotoxy(0,0);
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
; 0000 0036         lcd_puts(lcd_buffer);
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
; 0000 0037         sprintf(lcd_buffer,"%d  %d ",OCR1A,OCR1B);
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 0038         lcd_gotoxy(0,1);
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0000 0039         lcd_puts(lcd_buffer);
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
; 0000 003A 
; 0000 003B }
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
; 0000 003C } }
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
